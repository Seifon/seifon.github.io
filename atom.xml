<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seifon-熊峰的博客</title>
  <icon>https://www.gravatar.com/avatar/7ac49c33c147e472add17a2c25693e10</icon>
  <subtitle>不定期分享一些个人开发经验</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.seifon.cn/"/>
  <updated>2018-01-24T15:13:45.000Z</updated>
  <id>https://www.seifon.cn/</id>
  
  <author>
    <name>Seifon</name>
    <email>seifon@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx的五种负载算法模式</title>
    <link href="https://www.seifon.cn/2017/09/05/Nginx%E7%9A%84%E4%BA%94%E7%A7%8D%E8%B4%9F%E8%BD%BD%E7%AE%97%E6%B3%95%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.seifon.cn/2017/09/05/Nginx的五种负载算法模式/</id>
    <published>2017-09-04T17:03:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、轮询（默认）"><a href="#1、轮询（默认）" class="headerlink" title="1、轮询（默认）"></a>1、轮询（默认）</h4><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。  </p><blockquote><p>例如：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">upstream bakend &#123;  </div><div class="line">server 192.168.0.14;  </div><div class="line">server 192.168.0.15;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2、weight权重"><a href="#2、weight权重" class="headerlink" title="2、weight权重"></a>2、weight权重</h4><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。  </p><blockquote><p>例如：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">upstream bakend &#123;  </div><div class="line">server 192.168.0.14 weight=10;  </div><div class="line">server 192.168.0.15 weight=10;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="3、ip-hash"><a href="#3、ip-hash" class="headerlink" title="3、ip_hash"></a>3、ip_hash</h4><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。  </p><blockquote><p>例如：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">upstream bakend &#123;  </div><div class="line">ip_hash;  </div><div class="line">server 192.168.0.14:88;  </div><div class="line">server 192.168.0.15:80;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="4、fair（第三方）"><a href="#4、fair（第三方）" class="headerlink" title="4、fair（第三方）"></a>4、fair（第三方）</h4><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">upstream backend &#123;  </div><div class="line">server server1;  </div><div class="line">server server2;  </div><div class="line">fair;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="5、url-hash（第三方）"><a href="#5、url-hash（第三方）" class="headerlink" title="5、url_hash（第三方）"></a>5、url_hash（第三方）</h4><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。  </p><p>例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">upstream backend &#123;  </div><div class="line">server squid1:3128;  </div><div class="line">server squid2:3128;  </div><div class="line">hash $request_uri;  </div><div class="line">hash_method crc32;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>tips:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">upstream bakend&#123;#定义负载均衡设备的Ip及设备状态  </div><div class="line">ip_hash;  </div><div class="line">server 127.0.0.1:9090 down;  </div><div class="line">server 127.0.0.1:8080 weight=2;  </div><div class="line">server 127.0.0.1:6060;  </div><div class="line">server 127.0.0.1:7070 backup;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在需要使用负载均衡的server中增加  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">proxy_pass http://bakend/;</div></pre></td></tr></table></figure><h4 id="每个设备的状态设置为"><a href="#每个设备的状态设置为" class="headerlink" title="每个设备的状态设置为:"></a>每个设备的状态设置为:</h4><ul><li>1.down 表示单前的server暂时不参与负载  </li><li>2.weight 默认为1.weight越大，负载的权重就越大。  </li><li>3.max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误  </li><li>4.fail_timeout:max_fails次失败后，暂停的时间。  </li><li>5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1、轮询（默认）&quot;&gt;&lt;a href=&quot;#1、轮询（默认）&quot; class=&quot;headerlink&quot; title=&quot;1、轮询（默认）&quot;&gt;&lt;/a&gt;1、轮询（默认）&lt;/h4&gt;&lt;p&gt;每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。  &lt;/
      
    
    </summary>
    
      <category term="Nginx" scheme="https://www.seifon.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://www.seifon.cn/tags/Nginx/"/>
    
      <category term="负载均衡" scheme="https://www.seifon.cn/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>高CPU占用调优</title>
    <link href="https://www.seifon.cn/2017/09/05/%E9%AB%98CPU%E5%8D%A0%E7%94%A8%E8%B0%83%E4%BC%98/"/>
    <id>https://www.seifon.cn/2017/09/05/高CPU占用调优/</id>
    <published>2017-09-04T16:39:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="根据top命令，发现PID为28555的Java进程占用CPU高达200-，出现故障。"><a href="#根据top命令，发现PID为28555的Java进程占用CPU高达200-，出现故障。" class="headerlink" title="根据top命令，发现PID为28555的Java进程占用CPU高达200%，出现故障。"></a>根据top命令，发现PID为28555的Java进程占用CPU高达200%，出现故障。</h4><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fjqjr9mfhxj20nb07k7fy.jpg" alt=""></p><h4 id="通过查看进程"><a href="#通过查看进程" class="headerlink" title="通过查看进程"></a>通过查看进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux | grep PID</div></pre></td></tr></table></figure><p>可以进一步确定是tomcat进程出现了问题。</p><p>但是，怎么定位到具体线程或者代码呢？</p><h4 id="首先显示线程列表"><a href="#首先显示线程列表" class="headerlink" title="首先显示线程列表:"></a>首先显示线程列表:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -mp pid -o THREAD,tid,time</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fjqjtoveipj20nb08idrh.jpg" alt=""></p><p>找到了耗时最高的线程28802，占用CPU时间快两个小时了！</p><h4 id="其次将需要的线程ID转换为16进制格式："><a href="#其次将需要的线程ID转换为16进制格式：" class="headerlink" title="其次将需要的线程ID转换为16进制格式："></a>其次将需要的线程ID转换为16进制格式：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">printf &quot;%x\n&quot; tid</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fjqjvwb86vj20n804f416.jpg" alt=""></p><h4 id="最后打印线程的堆栈信息："><a href="#最后打印线程的堆栈信息：" class="headerlink" title="最后打印线程的堆栈信息："></a>最后打印线程的堆栈信息：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jstack pid |grep tid(16进制线程ID) –A60</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fjqjviodt2j20o00afncx.jpg" alt=""></p><p>找到有问题的java代码(省略)，进行业务调整和编码修改</p><h4 id="最后，总结下排查CPU故障的方法和技巧有哪些："><a href="#最后，总结下排查CPU故障的方法和技巧有哪些：" class="headerlink" title="最后，总结下排查CPU故障的方法和技巧有哪些："></a>最后，总结下排查CPU故障的方法和技巧有哪些：</h4><ul><li><p>1、top命令：Linux命令。可以查看实时的CPU使用情况。也可以查看最近一段时间的CPU使用情况。</p></li><li><p>2、PS命令：Linux命令。强大的进程状态监控命令。可以查看进程以及进程中线程的当前CPU使用情况。属于当前状态的采样数据。</p></li><li><p>3、jstack：Java提供的命令。可以查看某个进程的当前线程栈运行情况。根据这个命令的输出可以定位某个进程的所有线程的当前运行状态、运行代码，以及是否死锁等等。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;根据top命令，发现PID为28555的Java进程占用CPU高达200-，出现故障。&quot;&gt;&lt;a href=&quot;#根据top命令，发现PID为28555的Java进程占用CPU高达200-，出现故障。&quot; class=&quot;headerlink&quot; title=&quot;根据top命
      
    
    </summary>
    
      <category term="JAVA调优" scheme="https://www.seifon.cn/categories/JAVA%E8%B0%83%E4%BC%98/"/>
    
    
      <category term="调优" scheme="https://www.seifon.cn/tags/%E8%B0%83%E4%BC%98/"/>
    
      <category term="Jstack" scheme="https://www.seifon.cn/tags/Jstack/"/>
    
      <category term="栈" scheme="https://www.seifon.cn/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>开关指定端口，以80为例</title>
    <link href="https://www.seifon.cn/2017/07/09/%E5%BC%80%E5%85%B3%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%EF%BC%8C%E4%BB%A580%E4%B8%BA%E4%BE%8B/"/>
    <id>https://www.seifon.cn/2017/07/09/开关指定端口，以80为例/</id>
    <published>2017-07-09T06:02:54.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="开启80端口："><a href="#开启80端口：" class="headerlink" title="开启80端口："></a>开启80端口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -I INPUT -p tcp --dport 80 -j ACCEPT</div></pre></td></tr></table></figure><a id="more"></a><h4 id="关闭80端口："><a href="#关闭80端口：" class="headerlink" title="关闭80端口："></a>关闭80端口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -I INPUT -p tcp --dport 80 -j DROP</div></pre></td></tr></table></figure><h4 id="保存并重启Iptables："><a href="#保存并重启Iptables：" class="headerlink" title="保存并重启Iptables："></a>保存并重启Iptables：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/iptables save</div><div class="line">service iptables restart</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;开启80端口：&quot;&gt;&lt;a href=&quot;#开启80端口：&quot; class=&quot;headerlink&quot; title=&quot;开启80端口：&quot;&gt;&lt;/a&gt;开启80端口：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;iptables -I INPUT -p tcp --dport 80 -j ACCEPT&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Iptables" scheme="https://www.seifon.cn/categories/Iptables/"/>
    
    
      <category term="centos" scheme="https://www.seifon.cn/tags/centos/"/>
    
      <category term="linux" scheme="https://www.seifon.cn/tags/linux/"/>
    
      <category term="iptables" scheme="https://www.seifon.cn/tags/iptables/"/>
    
      <category term="防火墙" scheme="https://www.seifon.cn/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins环境搭建</title>
    <link href="https://www.seifon.cn/2017/07/08/Jenkins%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.seifon.cn/2017/07/08/Jenkins环境搭建/</id>
    <published>2017-07-07T17:52:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="上传以下的包到-tmp-目录下："><a href="#上传以下的包到-tmp-目录下：" class="headerlink" title="上传以下的包到/tmp/目录下："></a>上传以下的包到/tmp/目录下：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">jdk-8u121-linux-x64.tar.gz</div><div class="line">apache-tomcat-7.0.75.tar.gz</div><div class="line">apache-maven-3.5.0-bin.tar.gz</div><div class="line"></div><div class="line">MySQL-client-5.5.52-1.el6.x86_64.rpm</div><div class="line">MySQL-devel-5.5.52-1.el6.x86_64.rpm</div><div class="line">MySQL-server-5.5.52-1.el6.x86_64.rpm</div><div class="line">MySQL-shared-5.5.52-1.el6.x86_64.rpm</div><div class="line"></div><div class="line">git-2.9.3.tar.gz</div><div class="line">jenkins.war</div></pre></td></tr></table></figure><h4 id="解压包到-opt-目录下："><a href="#解压包到-opt-目录下：" class="headerlink" title="解压包到/opt/目录下："></a>解压包到/opt/目录下：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -xvzf /tmp/jdk-8u121-linux-x64.tar.gz -C /opt/</div><div class="line"></div><div class="line">tar -xvzf /tmp/apache-tomcat-7.0.75.tar.gz -C /opt/</div><div class="line"></div><div class="line">tar -xvzf /tmp/apache-maven-3.5.0-bin.tar.gz -C /opt/</div></pre></td></tr></table></figure><h4 id="配置环境变量："><a href="#配置环境变量：" class="headerlink" title="配置环境变量："></a>配置环境变量：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">vim /etc/profile</div><div class="line"></div><div class="line"></div><div class="line">JAVA_HOME=/opt/jdk1.8.0_121</div><div class="line">CATALINA_HOME=/opt/apache-tomcat-7.0.75</div><div class="line">MAVEN_HOME=/opt/apache-maven-3.5.0</div><div class="line"></div><div class="line">PATH=/opt/jdk1.8.0_121/bin:/opt/apache-tomcat-7.0.75/bin:/opt/apache-maven-3.5.0/bin:$PATH</div><div class="line">CLASSPATH=.:/opt/jdk1.8.0_121/lib/dt.jar:/opt/jdk1.8.0_121/lib/tools.jar</div><div class="line">export JAVA_HOME PATH CLASSPATH CATALINA_HOME MAVEN_HOME</div><div class="line"></div><div class="line"></div><div class="line">source /etc/profile</div></pre></td></tr></table></figure><hr><h4 id="配置Tomcat自启动："><a href="#配置Tomcat自启动：" class="headerlink" title="配置Tomcat自启动："></a>配置Tomcat自启动：</h4><ul><li>(1)、在/etc/init.d目录下创建文件：tomcat  内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"># This is the init script for starting up the</div><div class="line">#  Jakarta Tomcat server</div><div class="line">#</div><div class="line"># chkconfig: 345 91 10</div><div class="line"># description: Starts and stops the Tomcat daemon.</div><div class="line">#</div><div class="line"></div><div class="line"># Source function library.</div><div class="line">. /etc/rc.d/init.d/functions</div><div class="line"></div><div class="line"># Get config.</div><div class="line">. /etc/sysconfig/network</div><div class="line"></div><div class="line"># Check that networking is up.</div><div class="line">[ &quot;$&#123;NETWORKING&#125;&quot; = &quot;no&quot; ] &amp;&amp; exit 0</div><div class="line"></div><div class="line">export JAVA_HOME=/opt/jdk1.8.0_121</div><div class="line">export CATALINA_HOME=/opt/apache-tomcat-7.0.75</div><div class="line">startup=$CATALINA_HOME/bin/startup.sh</div><div class="line">shutdown=$CATALINA_HOME/bin/shutdown.sh</div><div class="line"></div><div class="line">start()&#123;</div><div class="line">   echo -n &quot;Starting Tomcat service:&quot;</div><div class="line">   cd $tomcat_home</div><div class="line">   $startup</div><div class="line">   echo &quot;tomcat is succeessfully started up&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">stop()&#123;</div><div class="line">   echo -n &quot;Shutting down tomcat: &quot;</div><div class="line">   cd $tomcat_home</div><div class="line">   $shutdown</div><div class="line">   echo &quot;tomcat is succeessfully shut down.&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">status()&#123;</div><div class="line">    numproc=`ps -ef | grep catalina | grep -v &quot;grep catalina&quot; | wc -l`</div><div class="line">    if [ $numproc -gt 0 ]; then</div><div class="line">       echo &quot;Tomcat is running...&quot;</div><div class="line">    else</div><div class="line">       echo &quot;Tomcat is stopped...&quot;</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"></div><div class="line">restart()&#123;</div><div class="line">   stop</div><div class="line">   start</div><div class="line">&#125;</div><div class="line"></div><div class="line"># See how we were called.</div><div class="line">case &quot;$1&quot; in</div><div class="line">start)</div><div class="line">   start</div><div class="line">   ;;</div><div class="line">stop)</div><div class="line">   stop</div><div class="line">   ;;</div><div class="line">status)</div><div class="line">   status</div><div class="line">   ;;</div><div class="line">restart)</div><div class="line">   restart</div><div class="line">   ;;</div><div class="line">*)</div><div class="line">   echo $&quot;Usage: $0 &#123;start|stop|status|restart&#125;&quot;</div><div class="line">   exit 1</div><div class="line">esac</div></pre></td></tr></table></figure><ul><li>(2)、配置权限，并加入自启：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /etc/init.d</div><div class="line">chmod 755 ./tomcat</div><div class="line">chkconfig --add tomcat</div><div class="line">chkconfig tomcat on</div></pre></td></tr></table></figure><ul><li>(3)、设置URIEncoding=”UTF-8”</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /opt/apache-tomcat-7.0.75/conf/server.xml</div></pre></td></tr></table></figure><ul><li>(4)、给Tomcat设置用户名密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vim /opt/apache-tomcat-7.0.75/conf/tomcat-users.xml</div><div class="line"></div><div class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</div><div class="line">&lt;user username=&quot;tomcat_user&quot; password=&quot;123456&quot; roles=&quot;manager-gui,manager-script,manager-jmx,manager-status&quot; /&gt;</div></pre></td></tr></table></figure><ul><li>(5)、打开/etc/sysconfig/iptables 加入以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT</div></pre></td></tr></table></figure><ul><li>(6)、重启防火墙服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables restart</div></pre></td></tr></table></figure><hr><h4 id="安装Mysql服务："><a href="#安装Mysql服务：" class="headerlink" title="安装Mysql服务："></a>安装Mysql服务：</h4><ul><li>安装服务器端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rpm -ivh /tmp/MySQL-server-5.5.52-1.el6.x86_64.rpm</div><div class="line"></div><div class="line">如果出现报错就执行：</div><div class="line">rpm -e --nodeps mysql-libs-5.1.73-7.el6.x86_64</div></pre></td></tr></table></figure><ul><li>安装客户端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh /tmp/MySQL-client-5.5.52-1.el6.x86_64.rpm</div></pre></td></tr></table></figure><ul><li>启动MySQL服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysql start</div></pre></td></tr></table></figure><ul><li>修改MySQL服务器登录密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password &apos;root&apos;</div></pre></td></tr></table></figure><ul><li>修改防火墙端口：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/iptables</div><div class="line"></div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT</div><div class="line"></div><div class="line">service iptables restart</div></pre></td></tr></table></figure><hr><h4 id="修改MySQL服务器访问权限"><a href="#修改MySQL服务器访问权限" class="headerlink" title="修改MySQL服务器访问权限"></a>修改MySQL服务器访问权限</h4><ul><li>第一步：登录MySQL服务器</li><li>第二步：use mysql;</li><li>第三步：查看user表部分内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select host,user,password from user;</div><div class="line">+--------------+------+-------------------------------------------+</div><div class="line">| host         | user | password                                  |</div><div class="line">+--------------+------+-------------------------------------------+</div><div class="line">| localhost    | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</div><div class="line">| computer0325 | root |                                           |</div><div class="line">| 127.0.0.1    | root |                                           |</div><div class="line">| ::1          | root |                                           |</div><div class="line">| localhost    |      |                                           |</div><div class="line">| computer0325 |      |                                           |</div><div class="line">+--------------+------+-------------------------------------------+</div><div class="line">6 rows in set (0.00 sec)</div></pre></td></tr></table></figure><ul><li>第四步：插入特定数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">insert into user(host,user,password) values(&apos;%&apos;,&apos;root&apos;,&apos;*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B&apos;);</div></pre></td></tr></table></figure><ul><li>第五步：再次查看user表内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select host,user,password from user;</div><div class="line">+--------------+------+-------------------------------------------+</div><div class="line">| host         | user | password                                  |</div><div class="line">+--------------+------+-------------------------------------------+</div><div class="line">| localhost    | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</div><div class="line">| computer0325 | root |                                           |</div><div class="line">| 127.0.0.1    | root |                                           |</div><div class="line">| ::1          | root |                                           |</div><div class="line">| localhost    |      |                                           |</div><div class="line">| computer0325 |      |                                           |</div><div class="line">| %            | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</div><div class="line">+--------------+------+-------------------------------------------+</div></pre></td></tr></table></figure><ul><li>第六步：为root@%授权</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;root&apos; WITH GRANT OPTION;</div></pre></td></tr></table></figure><ul><li>第七步：退出MySQL</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; exit;</div></pre></td></tr></table></figure><ul><li>第八步：重启MySQL服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysql restart;</div></pre></td></tr></table></figure><hr><h4 id="编译安装git"><a href="#编译安装git" class="headerlink" title="编译安装git"></a>编译安装git</h4><ul><li><p>安装依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div><div class="line"></div><div class="line">yum install  gcc perl-ExtUtils-MakeMaker</div></pre></td></tr></table></figure></li><li><p>删除已有的git：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum remove git</div></pre></td></tr></table></figure><ul><li>编译git：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tar -xvzf ./git-2.9.3.tar.gz -C /opt/</div><div class="line">cd /opt/git-2.9.3/</div><div class="line">make prefix=/usr/local/git all</div><div class="line">make prefix=/usr/local/git install</div><div class="line">echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/bashrc</div><div class="line">source /etc/bashrc</div></pre></td></tr></table></figure><ul><li>检查版本：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version</div></pre></td></tr></table></figure><hr><h4 id="部署Jenkins-war包，以及初始化环境："><a href="#部署Jenkins-war包，以及初始化环境：" class="headerlink" title="部署Jenkins.war包，以及初始化环境："></a>部署Jenkins.war包，以及初始化环境：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /tmp/jenkins.war /opt/apache-tomcat-7.0.75/webapps/</div></pre></td></tr></table></figure><ul><li>通过浏览器访问Tomcat下的jenkins应用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例如：http://[server-address]:8080/jenkins/</div></pre></td></tr></table></figure><ul><li>输入内置密钥串</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi82tr5h3aj211t0ieq48.jpg" alt=""></p><ul><li>先不安装插件，后面有需要时再安装，点右上角的×</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi82wdsq6pj211t0iego2.jpg" alt=""></p><ul><li>修改默认管理员密码</li></ul><hr><h4 id="安装GitHub-plugin-和-Deploy-to-container-Plugin-插件"><a href="#安装GitHub-plugin-和-Deploy-to-container-Plugin-插件" class="headerlink" title="安装GitHub plugin 和 Deploy to container Plugin 插件"></a>安装GitHub plugin 和 Deploy to container Plugin 插件</h4><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi83uloclej205300vjr5.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi83yo3d5pj205r00r0si.jpg" alt=""></p><ul><li>点击系统管理，进入系统设置界面</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi831ouwi2j20hx08naax.jpg" alt=""></p><blockquote><p>Configure Global Security</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">①勾选允许用户注册，这样万一我们忘记了之前的账号密码还可以再注册一个</div><div class="line">②勾选任何用户可以做任何事(没有任何限制)</div><div class="line">③取消防止跨站点请求伪造勾选</div></pre></td></tr></table></figure><blockquote><p>Global Tool Configuration</p></blockquote><ul><li>①设置Maven</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi8341ynlxj20qk08tt92.jpg" alt=""></p><ul><li>②设置JDK，不要选自动安装，因为我们自己安装过了</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi83524o09j20qi07j0sr.jpg" alt=""></p><ul><li>③设置MAVEN_HOME，同样不要自动安装</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi835r1x01j20qj07h3yk.jpg" alt=""></p><ul><li>④设置Git：/usr/local/git/bin/git</li></ul><p><img src="http://ww1.sinaimg.cn/large/8e24145egy1fi836rzcysj20qf07oglm.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;上传以下的包到-tmp-目录下：&quot;&gt;&lt;a href=&quot;#上传以下的包到-tmp-目录下：&quot; class=&quot;headerlink&quot; title=&quot;上传以下的包到/tmp/目录下：&quot;&gt;&lt;/a&gt;上传以下的包到/tmp/目录下：&lt;/h4&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="Jenkins" scheme="https://www.seifon.cn/categories/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="https://www.seifon.cn/tags/Jenkins/"/>
    
      <category term="CI" scheme="https://www.seifon.cn/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>Yaml语法说明</title>
    <link href="https://www.seifon.cn/2017/06/27/Yaml%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E/"/>
    <id>https://www.seifon.cn/2017/06/27/Yaml语法说明/</id>
    <published>2017-06-26T17:19:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>YAML 是专门用来写配置文件的语言，非常简洁和强大，远比 JSON 格式方便。</p><h4 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h4><ul><li>大小写敏感</li><li>使用缩进表示层级关系</li><li>缩进时不允许使用Tab键，只允许使用空格。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li>：冒号后面必须有空格</li><li>#表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul><h4 id="YAML支持三种数据结构："><a href="#YAML支持三种数据结构：" class="headerlink" title="YAML支持三种数据结构："></a>YAML支持三种数据结构：</h4><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><hr><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><blockquote><p><strong>一、对象的一组键值对，使用冒号结构表示。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">animal: pets</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; animal: &apos;pets&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p><strong>二、将所有键值对写成一个行内对象。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hash: &#123; name: Steve, foo: bar &#125;</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; hash: &#123; name: &apos;Steve&apos;, foo: &apos;bar&apos; &#125; &#125;</div></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><blockquote><p><strong>一、一组连词线开头的行，构成一个数组。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- Cat</div><div class="line">- Dog</div><div class="line">- Goldfish</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ &apos;Cat&apos;, &apos;Dog&apos;, &apos;Goldfish&apos; ]</div></pre></td></tr></table></figure><blockquote><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-</div><div class="line"> - Cat</div><div class="line"> - Dog</div><div class="line"> - Goldfish</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ [ &apos;Cat&apos;, &apos;Dog&apos;, &apos;Goldfish&apos; ] ]</div></pre></td></tr></table></figure><hr><blockquote><p><strong>二、数组也可以采用行内表示法。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">animal: [Cat, Dog]</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; animal: [ &apos;Cat&apos;, &apos;Dog&apos; ] &#125;</div></pre></td></tr></table></figure><h4 id="复合结构"><a href="#复合结构" class="headerlink" title="复合结构"></a>复合结构</h4><blockquote><p>对象和数组可以结合使用，形成复合结构。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">languages:</div><div class="line"> - Ruby</div><div class="line"> - Perl</div><div class="line"> - Python </div><div class="line">websites:</div><div class="line"> YAML: yaml.org </div><div class="line"> Ruby: ruby-lang.org </div><div class="line"> Python: python.org </div><div class="line"> Perl: use.perl.org</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123; languages: [ &apos;Ruby&apos;, &apos;Perl&apos;, &apos;Python&apos; ],</div><div class="line">  websites: </div><div class="line">   &#123; YAML: &apos;yaml.org&apos;,</div><div class="line">     Ruby: &apos;ruby-lang.org&apos;,</div><div class="line">     Python: &apos;python.org&apos;,</div><div class="line">     Perl: &apos;use.perl.org&apos; &#125; &#125;</div></pre></td></tr></table></figure><h4 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h4><blockquote><p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p><p>字符串<br>布尔值<br>整数<br>浮点数<br>Null<br>时间<br>日期</p></blockquote><hr><blockquote><p>数值直接以字面量的形式表示。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">number: 12.30</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; number: 12.30 &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>布尔值用true和false表示。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">isSet: true</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; isSet: true &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>null用~表示。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">parent: ~</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; parent: null &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>时间采用 ISO8601 格式。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iso8601: 2001-12-14t21:59:43.10-05:00</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; iso8601: new Date(&apos;2001-12-14t21:59:43.10-05:00&apos;) &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>日期采用复合 iso8601 格式的年、月、日表示。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">date: 1976-07-31</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; date: new Date(&apos;1976-07-31&apos;) &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>YAML 允许使用两个感叹号，强制转换数据类型。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e: !!str 123</div><div class="line">f: !!str true</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; e: &apos;123&apos;, f: &apos;true&apos; &#125;</div></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><blockquote><p>字符串是最常见，也是最复杂的一种数据类型。字符串默认不使用引号表示。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str: 这是一行字符串</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; str: &apos;这是一行字符串&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str: &apos;内容： 字符串&apos;</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str: &apos;内容: 字符串&apos;</div></pre></td></tr></table></figure><hr><blockquote><p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s1: &apos;内容\n字符串&apos;</div><div class="line">s2: &quot;内容\n字符串&quot;</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; s1: &apos;内容\\n字符串&apos;, s2: &apos;内容\n字符串&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str: &apos;labor&apos;&apos;s day&apos;</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; str: &apos;labor\&apos;s day&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str: 这是一段</div><div class="line">  多行</div><div class="line">  字符串</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; str: &apos;这是一段 多行 字符串&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>多行字符串可以使用|保留换行符，也可以使用&gt;折叠换行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">this: |</div><div class="line">  Foo</div><div class="line">  Bar</div><div class="line">that: &gt;</div><div class="line">  Foo</div><div class="line">  Bar</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 代码如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; this: &apos;Foo\nBar\n&apos;, that: &apos;Foo Bar\n&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">s1: |</div><div class="line">  Foo</div><div class="line"></div><div class="line">s2: |+</div><div class="line">  Foo</div><div class="line"></div><div class="line"></div><div class="line">s3: |-</div><div class="line">  Foo</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 代码如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; s1: &apos;Foo\n&apos;, s2: &apos;Foo\n\n\n&apos;, s3: &apos;Foo&apos; &#125;</div></pre></td></tr></table></figure><hr><blockquote><p>字符串之中可以插入 HTML 标记。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">message: |</div><div class="line"></div><div class="line">  </div><div class="line">    段落</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123; message: &apos;\n</div><div class="line">\n 段落\n</div><div class="line">\n&apos; &#125;</div></pre></td></tr></table></figure><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote><p>锚点&amp;和别名*，可以用来引用。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">defaults: &amp;defaults</div><div class="line">  adapter:  postgres</div><div class="line">  host:     localhost</div><div class="line"></div><div class="line">development:</div><div class="line">  database: myapp_development</div><div class="line">  &lt;&lt;: *defaults</div><div class="line"></div><div class="line">test:</div><div class="line">  database: myapp_test</div><div class="line">  &lt;&lt;: *defaults</div></pre></td></tr></table></figure><blockquote><p>等同于下面的代码。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">defaults:</div><div class="line">  adapter:  postgres</div><div class="line">  host:     localhost</div><div class="line"></div><div class="line">development:</div><div class="line">  database: myapp_development</div><div class="line">  adapter:  postgres</div><div class="line">  host:     localhost</div><div class="line"></div><div class="line">test:</div><div class="line">  database: myapp_test</div><div class="line">  adapter:  postgres</div><div class="line">  host:     localhost</div></pre></td></tr></table></figure><blockquote><p>&amp;用来建立锚点（defaults），&lt;&lt;表示合并到当前数据，*用来引用锚点。</p></blockquote><hr><blockquote><p>下面是另一个例子。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- &amp;showell Steve </div><div class="line">- Clark </div><div class="line">- Brian </div><div class="line">- Oren </div><div class="line">- *showell</div></pre></td></tr></table></figure><blockquote><p>转为 JavaScript 代码如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ &apos;Steve&apos;, &apos;Clark&apos;, &apos;Brian&apos;, &apos;Oren&apos;, &apos;Steve&apos; ]</div></pre></td></tr></table></figure><h4 id="函数和正则表达式的转换"><a href="#函数和正则表达式的转换" class="headerlink" title="函数和正则表达式的转换"></a>函数和正则表达式的转换</h4><blockquote><p>这是 JS-YAML 库特有的功能，可以把函数和正则表达式转为字符串。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># example.yml</div><div class="line">fn: function () &#123; return 1 &#125;</div><div class="line">reg: /test/</div></pre></td></tr></table></figure><blockquote><p>解析上面的 yml 文件的代码如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var yaml = require(&apos;js-yaml&apos;);</div><div class="line">var fs   = require(&apos;fs&apos;);</div><div class="line"></div><div class="line">try &#123;</div><div class="line">  var doc = yaml.load(</div><div class="line">    fs.readFileSync(&apos;./example.yml&apos;, &apos;utf8&apos;)</div><div class="line">  );</div><div class="line">  console.log(doc);</div><div class="line">&#125; catch (e) &#123;</div><div class="line">  console.log(e);</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var yaml = require(&apos;js-yaml&apos;);</div><div class="line">var fs   = require(&apos;fs&apos;);</div><div class="line"></div><div class="line">var obj = &#123;</div><div class="line">  fn: function () &#123; return 1 &#125;,</div><div class="line">  reg: /test/</div><div class="line">&#125;;</div><div class="line"></div><div class="line">try &#123;</div><div class="line">  fs.writeFileSync(</div><div class="line">    &apos;./example.yml&apos;,</div><div class="line">    yaml.dump(obj),</div><div class="line">    &apos;utf8&apos;</div><div class="line">  );</div><div class="line">&#125; catch (e) &#123;</div><div class="line">  console.log(e);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;YAML 是专门用来写配置文件的语言，非常简洁和强大，远比 JSON 格式方便。&lt;/p&gt;
&lt;h4 id=&quot;语法规则&quot;&gt;&lt;a href=&quot;#语
      
    
    </summary>
    
      <category term="Yaml" scheme="https://www.seifon.cn/categories/Yaml/"/>
    
    
      <category term="Yaml" scheme="https://www.seifon.cn/tags/Yaml/"/>
    
      <category term="yml" scheme="https://www.seifon.cn/tags/yml/"/>
    
  </entry>
  
  <entry>
    <title>Mysql异地定时备份方法</title>
    <link href="https://www.seifon.cn/2017/05/03/Mysql%E5%BC%82%E5%9C%B0%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%E6%96%B9%E6%B3%95/"/>
    <id>https://www.seifon.cn/2017/05/03/Mysql异地定时备份方法/</id>
    <published>2017-05-02T16:51:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="两台linux服务器："><a href="#两台linux服务器：" class="headerlink" title="两台linux服务器："></a>两台linux服务器：</h4><ul><li>一台199.20.30.222（mysql服务器）</li><li>一台199.20.30.226（与mysql互通的一台server）</li></ul><p>思路：mysql本地做一份备份；226Server做一份同步备份，脚本放在222上面，定时任务也设置在222上面。</p><h5 id="（1）mysql本地备份："><a href="#（1）mysql本地备份：" class="headerlink" title="（1）mysql本地备份："></a>（1）mysql本地备份：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">#mysql_backup</div><div class="line">DATE=`date +%Y%m%d`</div><div class="line">/opt/mysql/bin/mysqldump --opt jsweb -u root   &gt; /opt/mysqlbackup/$DATE.sql</div></pre></td></tr></table></figure><h5 id="（2）将本地备份同步到远端226上面："><a href="#（2）将本地备份同步到远端226上面：" class="headerlink" title="（2）将本地备份同步到远端226上面："></a>（2）将本地备份同步到远端226上面：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#date:2013/09/24</div><div class="line">#function:The script is used copying mysqlbackup to 226</div><div class="line">DATE=`date +%Y%m%d`</div><div class="line">scp /opt/mysqlbackup/$DATE.sql root@199.20.30.226:/data/2013backup/mysql/</div></pre></td></tr></table></figure><h5 id="（3）222上面设置定时任务："><a href="#（3）222上面设置定时任务：" class="headerlink" title="（3）222上面设置定时任务："></a>（3）222上面设置定时任务：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim/etc/crontable OR crontable -e</div><div class="line">30 1  *  *  *  /bin/sh /home/jiaoben/backup.sh      ===============每天1：30执行</div><div class="line">30 3  *  *  *  /bin/sh /home/jiaoben/scp.sh         ===============每天3：30执行</div></pre></td></tr></table></figure><blockquote><p>　注意：两个linux之间相互拷贝文件，使用scp工具必须输入远端密码,所以在进行（2）时，需要规避输入密码，否则自动备份到remote不会生效,<br>　本人采用的方法：使两个服务器互相信任，执行scp时，就可以免输入密码。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa</div><div class="line">cd /root/.ssh/</div><div class="line">scp id_rsa.pub root@199.20.30.226:/root/ssh/</div><div class="line">ssh root@199.20.30.226</div><div class="line">mv /root/.ssh/id_isa_pub /root/.ssh/authorized_key</div></pre></td></tr></table></figure><h4 id="时间过长备份的mysql就需要定时清理"><a href="#时间过长备份的mysql就需要定时清理" class="headerlink" title="时间过长备份的mysql就需要定时清理"></a>时间过长备份的mysql就需要定时清理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">find /opt/mysqlbackup/ -type f -name \*.sql -mtime +10 -exec rm -fr &#123;&#125; \;</div><div class="line">find /opt/mysqlbackup/ -type f -name &quot;*.sql&quot; -mtime +10 -exec rm -fr &#123;&#125; \;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;两台linux服务器：&quot;&gt;&lt;a href=&quot;#两台linux服务器：&quot; class=&quot;headerlink&quot; title=&quot;两台linux服务器：&quot;&gt;&lt;/a&gt;两台linux服务器：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;一台199.20.30.222（mysql服务器）&lt;/l
      
    
    </summary>
    
      <category term="Mysql" scheme="https://www.seifon.cn/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="https://www.seifon.cn/tags/Mysql/"/>
    
      <category term="数据库" scheme="https://www.seifon.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="备份" scheme="https://www.seifon.cn/tags/%E5%A4%87%E4%BB%BD/"/>
    
      <category term="定时" scheme="https://www.seifon.cn/tags/%E5%AE%9A%E6%97%B6/"/>
    
      <category term="容灾" scheme="https://www.seifon.cn/tags/%E5%AE%B9%E7%81%BE/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7防火墙Firewalld配置和使用</title>
    <link href="https://www.seifon.cn/2017/05/02/CentOS7%E9%98%B2%E7%81%AB%E5%A2%99Firewalld%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.seifon.cn/2017/05/02/CentOS7防火墙Firewalld配置和使用/</id>
    <published>2017-05-02T06:55:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="添加放行端口："><a href="#添加放行端口：" class="headerlink" title="添加放行端口："></a>添加放行端口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --add-port=80/tcp</div></pre></td></tr></table></figure><a id="more"></a><h4 id="删除放行端口："><a href="#删除放行端口：" class="headerlink" title="删除放行端口："></a>删除放行端口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --remove-port=80/tcp</div></pre></td></tr></table></figure><h4 id="热加载："><a href="#热加载：" class="headerlink" title="热加载："></a>热加载：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure><h5 id="命令含义："><a href="#命令含义：" class="headerlink" title="命令含义："></a>命令含义：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--zone #作用域</div><div class="line"></div><div class="line">--add-port=80/tcp  #添加端口，格式为：端口/通讯协议</div><div class="line"></div><div class="line">--permanent   #永久生效，没有此参数重启后失效</div></pre></td></tr></table></figure><hr><h4 id="查看防火墙配置："><a href="#查看防火墙配置：" class="headerlink" title="查看防火墙配置："></a>查看防火墙配置：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/firewalld/zones/public.xml | less</div></pre></td></tr></table></figure><h4 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl status firewalld.service</div></pre></td></tr></table></figure><h4 id="启动防火墙"><a href="#启动防火墙" class="headerlink" title="启动防火墙"></a>启动防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start firewalld.service</div></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service</div></pre></td></tr></table></figure><h4 id="重新启动防火墙"><a href="#重新启动防火墙" class="headerlink" title="重新启动防火墙"></a>重新启动防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart firewalld.service</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;添加放行端口：&quot;&gt;&lt;a href=&quot;#添加放行端口：&quot; class=&quot;headerlink&quot; title=&quot;添加放行端口：&quot;&gt;&lt;/a&gt;添加放行端口：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;firewall-cmd --permanent --zone=public --add-port=80/tcp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Iptables" scheme="https://www.seifon.cn/categories/Iptables/"/>
    
    
      <category term="centos" scheme="https://www.seifon.cn/tags/centos/"/>
    
      <category term="linux" scheme="https://www.seifon.cn/tags/linux/"/>
    
      <category term="iptables" scheme="https://www.seifon.cn/tags/iptables/"/>
    
      <category term="防火墙" scheme="https://www.seifon.cn/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>出圈算法</title>
    <link href="https://www.seifon.cn/2017/04/13/%E5%87%BA%E5%9C%88%E7%AE%97%E6%B3%95/"/>
    <id>https://www.seifon.cn/2017/04/13/出圈算法/</id>
    <published>2017-04-12T16:58:00.000Z</published>
    <updated>2018-01-24T15:13:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目：有-people-个人站成一个圈，第一个人开始数数（从1开始），每数到-num-或者-num-的倍数此人就退出。最后剩下的人是多少号？"><a href="#题目：有-people-个人站成一个圈，第一个人开始数数（从1开始），每数到-num-或者-num-的倍数此人就退出。最后剩下的人是多少号？" class="headerlink" title="题目：有 people 个人站成一个圈，第一个人开始数数（从1开始），每数到 num 或者 num 的倍数此人就退出。最后剩下的人是多少号？"></a>题目：有 people 个人站成一个圈，第一个人开始数数（从1开始），每数到 num 或者 num 的倍数此人就退出。最后剩下的人是多少号？</h4><p>网上看了看，应该有很多种实现方法，在此摘录下来。</p><h5 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">static int cycle(int people, int num) &#123;  </div><div class="line">    int i, r = 0;  </div><div class="line">    for (i = 2; i &lt;= people; i++) &#123;  </div><div class="line">        r = (r + num) % i;  </div><div class="line">    &#125;  </div><div class="line">    return r + 1;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">static int cycle(int people, int num) &#123;  </div><div class="line">    int i, r = 0;  </div><div class="line">    for (i = 2; i &lt;= people; i++) r = (r + num) % i;</div><div class="line">    return r + 1;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="方式三："><a href="#方式三：" class="headerlink" title="方式三："></a>方式三：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">private static int cycle(int people, int num) &#123;</div><div class="line">    List&lt;Integer&gt; dataList = new LinkedList&lt;Integer&gt;();  </div><div class="line">    for (int i = 0; i &lt; people; i++) &#123;  </div><div class="line">        dataList.add(new Integer(i + 1));  </div><div class="line">    &#125;  </div><div class="line"></div><div class="line">    int index = -1;  </div><div class="line">    while (dataList.size() &gt; 1) &#123;  </div><div class="line">        index = (index + num) % dataList.size();  </div><div class="line">        dataList.remove(index);  </div><div class="line">        index--;  </div><div class="line">    &#125;  </div><div class="line">    return dataList.get(0).intValue();  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;题目：有-people-个人站成一个圈，第一个人开始数数（从1开始），每数到-num-或者-num-的倍数此人就退出。最后剩下的人是多少号？&quot;&gt;&lt;a href=&quot;#题目：有-people-个人站成一个圈，第一个人开始数数（从1开始），每数到-num-或者-num-
      
    
    </summary>
    
      <category term="算法" scheme="https://www.seifon.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://www.seifon.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.seifon.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="面试" scheme="https://www.seifon.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
